{"ast":null,"code":"var _jsxFileName = \"/home/book/react-apps/Ticket entry Blue UI/src/Numbox.js\";\nimport React from \"react\";\nimport \"./Numbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Numbox = _ref => {\n  let {\n    number,\n    type,\n    ticket,\n    setTicket\n  } = _ref;\n  let boxtype = type === \"circle\" ? \"numbox-circle\" : \"numbox\";\n\n  const numpadHandler = number => {\n    if (number === 0 && ticket === 0) {\n      setTicket(0);\n    }\n\n    setTicket(num => {\n      return num * 10 + number;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: boxtype,\n    onClick: () => {\n      numpadHandler(number);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Numbox;\nexport default Numbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Numbox\");","map":{"version":3,"sources":["/home/book/react-apps/Ticket entry Blue UI/src/Numbox.js"],"names":["React","Numbox","number","type","ticket","setTicket","boxtype","numpadHandler","num"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAwC;AACtD,MAAIC,OAAO,GAAGH,IAAI,KAAK,QAAT,GAAoB,eAApB,GAAsC,QAApD;;AACA,QAAMI,aAAa,GAAIL,MAAD,IAAY;AAChC,QAAIA,MAAM,KAAK,CAAX,IAAgBE,MAAM,KAAK,CAA/B,EAAkC;AAChCC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD;;AAEDA,IAAAA,SAAS,CAAEG,GAAD,IAAS;AACjB,aAAOA,GAAG,GAAG,EAAN,GAAWN,MAAlB;AACD,KAFQ,CAAT;AAGD,GARD;;AAUA,sBACE;AACE,IAAA,SAAS,EAAEI,OADb;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,aAAa,CAACL,MAAD,CAAb;AACD,KAJH;AAAA,2BAME;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtBD;;KAAMD,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Numbox.css\";\n\nconst Numbox = ({ number, type, ticket, setTicket }) => {\n  let boxtype = type === \"circle\" ? \"numbox-circle\" : \"numbox\";\n  const numpadHandler = (number) => {\n    if (number === 0 && ticket === 0) {\n      setTicket(0);\n    }\n\n    setTicket((num) => {\n      return num * 10 + number;\n    });\n  };\n\n  return (\n    <button\n      className={boxtype}\n      onClick={() => {\n        numpadHandler(number);\n      }}\n    >\n      <span>{number}</span>\n    </button>\n  );\n};\n\nexport default Numbox;\n"]},"metadata":{},"sourceType":"module"}